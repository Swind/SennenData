{"version":3,"sources":["webpack:///webpack/bootstrap 3636c52a2aba62f6679d?52ad","webpack:///./parser/sennen.ls","webpack:///external \"fs\"?2e09","webpack:///external \"cheerio\"","webpack:///./parser/data.ls"],"names":[],"mappings":"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","file":"parser.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 3636c52a2aba62f6679d\n **/","require! {\n    \"fs\": fs\n    \"cheerio\": cheerio\n    \"./data.ls\": Data\n}\n\n/*================================================================\n*\n*   Global variables \n*\n*================================================================*/\n\nchar_list = []\n\nrare_name_list = {\n    iron: [\"アイアン\", 1]\n    bronze: [\"ブロンズ\", 2]\n    silver: [\"シルバー\", 3]\n    golden: [\"ゴールド\", 4]\n    platinum: [\"プラチナ\", 5]\n    black: [\"ブラック\", 6]\n    sapphire: [\"サファイア\", 7]\n}\n\n/*================================================================\n*\n*   Parser \n*\n*================================================================*/\nread_data = (filename, container, callback) ->\n\n    data_folder = \"raw/\"\n\n    (err, data) <- fs.readFile data_folder + filename\n\n    # Read file\n    if err\n        throw err\n\n    $ = cheerio.load data.toString!\n\n    # Parse html\n    $(\\table.floatLeft).each (i, elem) ->\n\n        status_table = $(elem).find(\\tr)\n\n        name_table = status_table[0]\n        name = $($(name_table).find(\"a.load\").nextAll![*-1])text!\n\n        char = new Data.Char name\n\n        img = $(elem).find(\"a.load img\").attr \\src\n        char.img = img\n\n        for i to status_table.length - 1 by 2\n            min = status_table[i]\n            max = status_table[i+1]\n\n            class_name = $($(min).find('td[style=\"text-align:center; width:100px;\"]')[*-1]).text!\n\n            # Min LV \n            $(min).find(\"br\").text(\";\")\n            min_lv = $(min).find('td[style=\"width:40px;\"]')\n            min_lv_status = $(min_lv).nextAll! \n            min_hp = $(min_lv_status[0]).text!\n            min_at = $(min_lv_status[1]).text!\n            min_def = $(min_lv_status[2]).text!\n            min_lv_data = new Data.LvData min_lv.text!, min_hp, min_at, min_def\n\n            # Class status\n            resist = $(min_lv_status[3]).text!\n\n            block_range = $(min_lv_status[4]).text!.trim!.split \";\"\n\n            # If there are two value in block or range field\n            if block_range.length > 1\n                # If the second value start with +, the first value is range\n                if block_range[1].lastIndexOf(\\+, 0) === 0 or block_range[1].lastIndexOf(\\-, 0) === 0\n                    block = \"\"\n                    range = block_range[0]\n                else\n                    block = block_range[0]\n                    range = block_range[1]\n\n            # If there are one value, \n            # the value smaller than 10 is block otherwise is range\n            else if parseInt(block_range[0]) > 10\n                block = \"\"\n                range = block_range[0]\n            else\n                block = block_range[0]\n                range = \"\"\n\n\n            max_cost = $(min_lv_status[5]).text!\n            min_cost = $(min_lv_status[6]).text!\n\n            bonus = $(min_lv_status[7]).text!\n            bonus = new Data.Bonus(bonus)\n\n            skill_1 = $(min_lv_status[8]).text!\n            skill_2 = $(min_lv_status[9]).text!\n\n            # Max LV \n            $(max).find(\"br\").text(\";\")\n            max_lv = $(max).find('td[style=\"width:40px;\"]')\n            max_lv_status = $(max_lv).nextAll!\n            max_hp = $(max_lv_status[0]).text!\n            max_at = $(max_lv_status[1]).text!\n            max_def = $(max_lv_status[2]).text!\n            max_lv_data = new Data.LvData max_lv.text!, max_hp, max_at, max_def\n\n            if max_lv_status.length > 3\n                skill_3 = $(max_lv_status[3]).text!\n            else\n                skill_3 = \"\"\n\n            class_data = new Data.ClassData class_name,\n                                       min_lv_data,\n                                       max_lv_data,\n                                       resist,\n                                       block,\n                                       range,\n                                       max_cost,\n                                       min_cost,\n                                       bonus,\n                                       skill_1,\n                                       skill_2,\n                                       skill_3\n\n            char.add_class_data class_data\n\n        # Filter 王子 and empty data\n        if char.name and char.name != \"(プレイヤー名)\"\n            container[*] = char\n\n    callback!\n\n/*================================================================\n*\n*   Main\n*\n*================================================================*/\n\nupdate_rare = (rare_name, rare_jp_name, rare_lv, collection) ->\n    rare_list = []\n\n    new Promise (resolve, reject) ->\n        <- read_data rare_name + \".html\", rare_list\n\n        for rare_item in rare_list\n            for char in char_list\n                if char.name == rare_item.name and rare_item.name and char\n                    char.rare = rare_jp_name\n                    char.rare_lv = rare_lv\n\n        resolve rare_list\n\n# Read melee data\nmelee_list = []\n<- read_data \\melee.html, melee_list\nfor char in melee_list\n    char.type = \\melee\n    char_list[*] = char\n\n# Read range data\nrange_list = []\n<- read_data \\range.html, range_list\nfor char in range_list\n\n    # Filter the summon\n    if char.class_list[0].range != 0\n        char.type = \\range\n    else\n        char.type = \\melee\n\n    char_list[*] = char\n\n\n# Read rare data and merge that\ntasks = for rare_name, [rare_jp_name, rare_lv] of rare_name_list\n            update_rare(rare_name, rare_jp_name, rare_lv, char_list)\n\n# Wait all rare data merge finished\n(value) <- Promise.all(tasks).then\n\n# Save char to json file\n(err) <- fs.writeFile \\sennen.json, JSON.stringify char_list, \"utf-8\"\n\nif err\n    return console.log err\n\nconsole.log \"Done!\"\n\n\n\n/** WEBPACK FOOTER **\n ** ./parser/sennen.ls\n **/","module.exports = require(\"fs\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"fs\"\n ** module id = 2\n ** module chunks = 0 1\n **/","module.exports = require(\"cheerio\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"cheerio\"\n ** module id = 4\n ** module chunks = 1\n **/","/*================================================================\n*\n*   Utils \n*\n*================================================================*/\nescape = (char) ->\n    return char.replace(/Lv|\\*|-|ランク200/, \"\")\n\nto_number = (char) ->\n    clean_char = escape char\n\n    if clean_char.trim!\n        result = parseInt(clean_char)\n    else\n        result = 0\n\n    if result === NaN\n        console.log \"to_number failed:\", char\n\n    return result\n\n/*================================================================\n*\n*   Data modules \n*\n*================================================================*/\nclass Char\n    (name)->\n        @name = name\n        @class_type = \"\"\n        @type = \"\"\n        @rare = \"\"\n        @rare_lv = 0\n        @img = \"\"\n\n        @class_list = []\n\n    add_class_data: (class_data)->\n        if @class_list.length == 0\n            @class_type = class_data.name.replace(\"下級\", \"\")\n\n        @class_list[*] = class_data\n\n\nclass ClassData\n    (name, min, max, resist, block, range, max_cost, min_cost, bonus, skill_1, skill_2, skill_3=\"\")->\n        @name = name\n        @min = min\n        @max = max\n        @resist = to_number resist\n        @block = to_number block\n        @range = to_number range\n        @max_cost = to_number max_cost\n        @min_cost = to_number min_cost\n        @bonus = bonus\n        @skill_1 = escape skill_1\n        @skill_2 = escape skill_2\n        @skill_3 = escape skill_3\n\nclass LvData\n    (lv, hp, at, def)->\n        @lv = to_number lv\n        @hp = to_number hp\n        @at = to_number at\n        @def = to_number def\n\nclass Bonus\n    (bonus)->\n        @hp = 0\n        @at = 0\n        @def = 0\n        @stun = 0\n\n        type_list = {\n            \"HP+\": \\hp\n            \"攻撃力+\": \\at\n            \"防御力+\": \\def\n            \"攻撃硬直-\": \\stun\n        }\n\n        for item in bonus.split \";\"\n            for key, value of type_list\n                if item.indexOf(key) == 0\n                    @[value] = to_number item.replace(key, \"\")\n\nmodule.exports = {\n    \"Char\": Char\n    \"ClassData\": ClassData\n    \"LvData\": LvData\n    \"Bonus\": Bonus\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./parser/data.ls\n **/"],"sourceRoot":""}